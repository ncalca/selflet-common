//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.31 at 02:00:19 PM CEST 
//


package it.polimi.elet.selflet.utilities.parser;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for offerModeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="offerModeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="CanDo"/>
 *     &lt;enumeration value="CanTeach"/>
 *     &lt;enumeration value="Both"/>
 *     &lt;enumeration value="KnowsWhoCanBoth"/>
 *     &lt;enumeration value="KnowsWhoCanDo"/>
 *     &lt;enumeration value="KnowsWhoCanTeach"/>
 *     &lt;enumeration value="None"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "offerModeType", namespace = "http://sourceforge.net/projects/selflet/service")
@XmlEnum
public enum OfferModeType {

    @XmlEnumValue("CanDo")
    CAN_DO("CanDo"),
    @XmlEnumValue("CanTeach")
    CAN_TEACH("CanTeach"),
    @XmlEnumValue("Both")
    BOTH("Both"),
    @XmlEnumValue("KnowsWhoCanBoth")
    KNOWS_WHO_CAN_BOTH("KnowsWhoCanBoth"),
    @XmlEnumValue("KnowsWhoCanDo")
    KNOWS_WHO_CAN_DO("KnowsWhoCanDo"),
    @XmlEnumValue("KnowsWhoCanTeach")
    KNOWS_WHO_CAN_TEACH("KnowsWhoCanTeach"),
    @XmlEnumValue("None")
    NONE("None");
    private final String value;

    OfferModeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OfferModeType fromValue(String v) {
        for (OfferModeType c: OfferModeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
